{"version":3,"sources":["components/appBar.js","components/search.js","components/list.js","components/itemGrid.js","components/containerGrid.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","root","menuButton","marginRight","spacing","title","ButtonAppBar","props","classes","loginButton","Button","color","onClick","login","isAuth","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","auth_user","display","margin","search","flexFlow","borderRadius","backgroundColor","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","textDecoration","findButton","border","SearchField","InputBase","placeholder","inputProps","onChange","onSearchInputChange","disabled","searchInput","onFindButtonClick","maxHeight","palette","background","paper","ListComponent","console","log","content","List","subheader","ListSubheader","Divider","map","value","ind","labelId","ListItem","key","button","onNewSearchClick","grid_key","ListItemAvatar","Avatar","alt","src","ListItemText","id","primary","ItemGrid","Grid","item","xs","sm","md","lg","Paper","elevation","style","overflow","ContainerGrid","gridItems","container","direction","justify","wrap","App","state","search_login","team","get_user","axios","get","withCredentials","then","response","data","current_user","setState","catch","error","getTeam","base_team","formTeam","new_team","concat","slice","length","push","input_text","alert","onSearchInputStart","event","target","onLoginBtnClicked","window","location","href","this","teamGrid","search_user","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.99b39882.chunk.js","sourcesContent":["import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {},\n}));\n\nconst ButtonAppBar = (props) => {\n  const classes = useStyles();\n  const loginButton = (\n    <Button color=\"inherit\" onClick={props.login}>\n      {props.isAuth ? \"Logout\" : \"Git Login\"}\n    </Button>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            TeamFinder\n          </Typography>\n\n          <div className={classes.grow} />\n          <p>{props.isAuth ? \"Hi, \" + props.auth_user + \"!\" : null}</p>\n\n          {loginButton}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default ButtonAppBar;\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    margin: \"10px\",\n  },\n  search: {\n    display: \"flex\",\n    flexFlow: 1,\n    borderRadius: 8,\n    // border:\n    backgroundColor: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(1, 2, 1, 2),\n\n    color: \"blue\",\n    // padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    textDecoration: \"underline\",\n\n    // [theme.breakpoints.up(\"md\")]: {\n    //   width: \"20ch\",\n    // },\n  },\n  findButton: {\n    backgroundColor: \"lightgray\",\n    color: \"blue\",\n    borderRadius: 8,\n    border: \"None\",\n    \"&:hover\": {\n      backgroundColor: \"lightgray\",\n      border: \"2px solid blue\" /* Green */,\n    },\n  },\n}));\n\nconst SearchField = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          className={classes.inputInput}\n          placeholder=\"Search team for …\"\n          inputProps={{ \"aria-label\": \"search\" }}\n          onChange={props.onSearchInputChange}\n        />\n      </div>\n      <Button\n        className={classes.findButton}\n        disabled={props.searchInput ? false : true}\n        onClick={props.onFindButtonClick}\n      >\n        Find team\n      </Button>\n    </div>\n  );\n};\n\nexport default SearchField;\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// import GridList from \"@material-ui/core/GridList\";\n// import GridListTile from \"@material-ui/core/GridListTile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    // maxWidth: 360,\n    maxHeight: 500,\n    backgroundColor: theme.palette.background.paper,\n    // overflow: \"auto\",\n    // overflowX: \"hidden\",\n    // overflowY: \"scroll\",\n  },\n  // gridList: {\n  // width: 500,\n  // height: 450,\n  // },\n}));\n// rt default function ImageGridList() {\n//   const classes = useStyles();\n\n//   return (\n//     <div className={classes.root}>\n//       <GridList cellHeight={160} className={classes.gridList} cols={3}>\n//         {tileData.map((tile) => (\n//           <GridListTile key={tile.img} cols={tile.cols || 1}>\n//             <img src={tile.img} alt={tile.title} />\n//           </GridListTile>\n//         ))}\n//       </GridList>\n//     </div>\n//   );\n// }\nconst ListComponent = (props) => {\n  const classes = useStyles();\n  console.log(\"ListContent\", props.content);\n\n  return (\n    // dense\n    <List className={classes.root} subheader={<div />}>\n      <ListSubheader>Team for {props.content[0]}</ListSubheader>\n      {/* <lh>Team for {props.content[0]}</lh> */}\n\n      <Divider />\n      {props.content.map((value, ind) => {\n        const labelId = `label-${ind}`;\n        console.log(\"value\", value);\n        let result = (\n          <ListItem\n            key={ind}\n            button\n            onClick={() => props.onNewSearchClick(value, props.grid_key)}\n          >\n            <ListItemAvatar>\n              <Avatar\n                alt={`Avatar n°${value + 1}`}\n                src={`https://github.com/${value}.png`}\n              />\n            </ListItemAvatar>\n            <ListItemText id={labelId} primary={value} />\n          </ListItem>\n        );\n        // if (ind == 0) {\n        //   result = (\n        //     <ListSubheader>\n        //       <ListItem key={ind} button>\n        //         <ListItemAvatar>\n        //           <Avatar\n        //             alt={`Avatar n°${value + 1}`}\n        //             // src={props.url}\n        //           />\n        //         </ListItemAvatar>\n        //         <ListItemText id={labelId} primary={value} />\n        //       </ListItem>\n        //     </ListSubheader>\n        //   );\n        // }\n        return result;\n      })}\n    </List>\n  );\n};\n\nexport default ListComponent;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListComponent from \"./list\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 530,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst ItemGrid = (props) => {\n  const classes = useStyles();\n\n  return (\n    // zeroMinWidth\n    <Grid item xs={12} sm={6} md={4} lg={3} className={classes.root}>\n      <Paper elevation={3} style={{ height: 500, overflow: \"auto\" }}>\n        <ListComponent\n          content={props.content}\n          grid_key={props.grid_key}\n          // search_user={props.search_user}\n          onNewSearchClick={props.onNewSearchClick}\n        />\n      </Paper>\n    </Grid>\n  );\n};\nexport default ItemGrid;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ItemGrid from \"./itemGrid\";\n\nconst ContainerGrid = (props) => {\n  const gridItems = props.content.map((item, ind) => {\n    return (\n      <ItemGrid\n        key={ind}\n        grid_key={ind}\n        content={item}\n        // search_user={item[0]}\n        onNewSearchClick={props.onNewSearchClick}\n      />\n    );\n  });\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      wrap=\"wrap\"\n      spacing={3}\n    >\n      {gridItems}\n    </Grid>\n  );\n};\nexport default ContainerGrid;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport PrimarySearchAppBar from \"./components/appBar\";\nimport axios from \"axios\";\nimport SearchField from \"./components/search\";\nimport ContainerGrid from \"./components/containerGrid\";\n\nconst LOGIN_URL = \"http://127.0.0.1:5000/login\";\nconst LOGOUT_URL = \"http://127.0.0.1:5000/logout\";\n\nconst CURRENT_USER_URL = \"http://127.0.0.1:5000/user\";\nconst FIND_USER_TEAM_URL = \"http://127.0.0.1:5000/get_team/\";\n\nclass App extends Component {\n  state = {\n    search_login: \"\",\n    isAuth: false,\n    auth_user: \"\",\n    team: [[]],\n  };\n\n  componentDidMount() {\n    // constructor() {\n    // super();\n    this.get_user();\n  }\n  get_user = () => {\n    axios\n      .get(CURRENT_USER_URL, { withCredentials: true })\n      // .get(CURRENT_USER_URL)\n      .then((response) => {\n        const isAuth = response.data[\"isAuth\"] ? true : false;\n        const current_user = response.data[\"auth_user\"];\n        console.log(\"RESPONSE\", response);\n        this.setState({\n          isAuth: isAuth,\n          auth_user: current_user,\n        });\n        console.log(\"State\", this.state);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  getTeam = (login, ind) => {\n    console.log(\"From table#\", ind, \" get login: \", login);\n    axios\n      .get(FIND_USER_TEAM_URL + login, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        const base_team = this.formTeam(response, login, ind);\n\n        this.setState({\n          ...this.state,\n          team: base_team,\n        });\n        console.log(\"new team state\", this.state.team);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  formTeam = (response, login, ind) => {\n    const new_team = [login].concat(response[\"data\"][\"team\"]);\n    let base_team = [...this.state.team].slice(0, ind + 1);\n    console.log(\"state_team\", this.state.team);\n    console.log(\"new_team\", new_team);\n    console.log(\"baseteam\", base_team);\n    // console.log(\"base_team[0].length\", base_team[0].length);\n    if (ind === -1 || base_team[0].length === 0) {\n      base_team = [new_team];\n    } else {\n      base_team.push(new_team);\n    }\n    console.log(\"team\", base_team);\n    return base_team;\n  };\n  onFindButtonClick = () => {\n    if (!this.state.isAuth) {\n      alert(\"Login First\");\n    } else {\n      this.getTeam(this.state.input_text, -1);\n    }\n  };\n\n  onNewSearchClick = (value, ind) => {\n    console.log(\"clicked\", value, ind);\n    this.getTeam(value, ind);\n    this.setState({\n      search_login: value,\n    });\n  };\n  onSearchInputStart = (event) => {\n    this.setState({\n      input_text: event.target.value,\n    });\n  };\n  onLoginBtnClicked = (isAuth) => {\n    // const cookie = Cookies.getJSON();\n\n    // console.log(\"cookie\", cookie);\n    if (isAuth) {\n      axios\n        .get(LOGOUT_URL, {\n          withCredentials: true,\n        })\n        .then((response) => {\n          console.log(response);\n          this.setState({\n            ...this.state,\n            isAuth: false,\n            team: [[]],\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      // console.log(\"cookie\", cookie);\n      // document.cookies\n    } else {\n      console.log(\"not logged in\");\n      window.location.href = LOGIN_URL;\n      // axios.get(LOGIN_URL).then((response) => {\n      // console.log(response);\n      // });\n    }\n  };\n  render() {\n    let teamGrid = null;\n\n    if (this.state.team && this.state.team[0].length != 0) {\n      teamGrid = (\n        <ContainerGrid\n          content={this.state.team}\n          search_user={this.state.search_login}\n          onNewSearchClick={(value, ind) => {\n            this.onNewSearchClick(value, ind);\n          }}\n        ></ContainerGrid>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <PrimarySearchAppBar\n          isAuth={this.state.isAuth}\n          auth_user={this.state.auth_user}\n          login={() => this.onLoginBtnClicked(this.state.isAuth)}\n        />\n        <SearchField\n          onSearchInputChange={(event) => this.onSearchInputStart(event)}\n          searchInput={this.state.input_text}\n          onFindButtonClick={() => this.onFindButtonClick(this.state.isAuth)}\n        />\n        {teamGrid}\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}